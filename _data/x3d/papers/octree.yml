- title: "iWalk: Interactive Out-Of-Core Rendering of Large Models"
  authors: Wagner T. Corrêa, James T. Klosowski, Cláudio T. Silva
  Abstract: "We present iWalk, a system for interactive out-of-core rendering of large models on an inexpensive PC.
  The system uses a new out-of-core preprocessing algorithm and a new multi-threaded out-of-core rendering approach.
  The out-of-core preprocessing algorithm is incremental and fast,
  and it builds an on-disk hierarchical rep-resentation for a model larger than main memory.
  The out-of-core rendering approach uses multiple threads to overlap rendering, visibility computation,
  and disk operations. A rendering thread uses a from-point visibility algorithm to find the nodes of the model hierarchy that the user sees,
  and sends fetch requests to a geometry cache, which reads nodes from disk into memory. To avoid bursts of disk operations,
  a look-ahead thread guesses the nodes that the user may see next, and sends prefetch requests to the geometry cache.
  The system can run in approximate mode for interactive rendering,
  or in conservative mode for rendering with guaranteed accuracy.
  On a commodity PC, iWalk can preprocess a 13-million-polygon model in 17 minutes,
  and then render it in approximate mode with 98% accuracy at 9 frames per second.
  Thus, iWalk allows us to use an inexpensive PC to visualize models that would typically require expensive high-end graphics workstations or parallel machines."
  url: https://vgc.poly.edu/~csilva/papers/iwalk.pdf
  refs: 

- title: "ETREE — A DATABASE-ORIENTED METHOD FOR GENERATING LARGE OCTREE MESHES"
  authors: Tiankai Tu, David R. O’Hallaron, Julio C. López
  Abstract: "This paper presents the design, implementation and evaluation of the etree , a database-oriented method for large out-of-core octree mesh generation.
  Our main idea is to map an octree to a database structure and perform all octree operations by querying the database.
  We use two database techniques | the linear quadtree and the B-tree to index and store the octants on disk.
  We introduce two two new techniques | auto navigation and local balancing to address the special need of mesh generation.
  Preliminary evaluation suggests that the etree method is an ective way of generating very large octree meshes (4 : 3 GB with 13 : 6 million elements) on a memory-limited machine (128MB)."

  url: http://imr.sandia.gov/papers/imr11/tu.pdf
  refs: 
